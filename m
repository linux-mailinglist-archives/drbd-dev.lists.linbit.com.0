Return-Path: <drbd-dev-bounces@lists.linbit.com>
X-Original-To: lists+drbd-dev@lfdr.de
Delivered-To: lists+drbd-dev@lfdr.de
Received: from mail19.linbit.com (mail19.linbit.com [159.69.154.96])
	by mail.lfdr.de (Postfix) with ESMTPS id 48DB96A82E9
	for <lists+drbd-dev@lfdr.de>; Thu,  2 Mar 2023 13:56:56 +0100 (CET)
Received: from mail19.linbit.com (localhost [127.0.0.1])
	by mail19.linbit.com (LINBIT Mail Daemon) with ESMTP id 2E9A5421792;
	Thu,  2 Mar 2023 13:56:56 +0100 (CET)
X-Original-To: drbd-dev@lists.linbit.com
Delivered-To: drbd-dev@lists.linbit.com
Received: from mail-ed1-f52.google.com (mail-ed1-f52.google.com
	[209.85.208.52])
	by mail19.linbit.com (LINBIT Mail Daemon) with ESMTP id 2021B4204BE
	for <drbd-dev@lists.linbit.com>; Thu,  2 Mar 2023 13:55:28 +0100 (CET)
Received: by mail-ed1-f52.google.com with SMTP id a25so4684475edb.0
	for <drbd-dev@lists.linbit.com>; Thu, 02 Mar 2023 04:55:28 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=linbit-com.20210112.gappssmtp.com; s=20210112; t=1677761728;
	h=content-transfer-encoding:mime-version:references:in-reply-to
	:message-id:date:subject:cc:to:from:from:to:cc:subject:date
	:message-id:reply-to;
	bh=UaJTm5229yrEXubUNP5BlvhXsOlTa5vI/ZiuzzVczOs=;
	b=nrSf03EQ12I9MGmauo6h0BDCrlvgIwD8zJQazlNEMPCA5Rxj+I84hPJHXyKFe9sbiR
	ywgqpGEm8qmzXn5bgtGdUOpOO0sHkEmIDR0saJSBO3sF8pFqef1FL7VremvbqXKy0um7
	oW1mNwebO451KaEKpnCaWfj35B4VPGDNWZebus8wALi9xDTUjZLieUiZhUe/HZ0SB5sL
	HxBB0vnDoEo1YlMlM4UuvvT7njmBwcU5IaoQbhRLbXl8SgdE3fFS+JKViReLXkxdkjXn
	/vxHbNnQXpra3BAND5MkOcs/ZnhoNavw4ddOlcGdfTQcSmXINVeyj3CYJzqmxIM43yxM
	tVdQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20210112; t=1677761728;
	h=content-transfer-encoding:mime-version:references:in-reply-to
	:message-id:date:subject:cc:to:from:x-gm-message-state:from:to:cc
	:subject:date:message-id:reply-to;
	bh=UaJTm5229yrEXubUNP5BlvhXsOlTa5vI/ZiuzzVczOs=;
	b=Mgs3bB26ZDbaiAnmfPlxwOf/+htxfOSPhHBQ8rR81+oGqmQNKo8EOzwXDnJ4yOM6er
	wUbVr9xsyztLNvS9tAnjHG6+LHANmsHOxObRy2NfhoJeLI0i+PRpi6RWJK8Zz9wrx0U8
	dngzs8fR/ehMhnhnuYMv/BLNVDCOnlKTvZDNqoaXue1gfza2+XijtUomGZda1tRxj0TR
	103Lwwz5adPnsRBaRDQfDDK1beUPgsHZbuRV9alMivcnPVmnLU/YipyioBvgm7t0DwGo
	SWLcjnX2BhM5G5NbAFYYE4GUvrPixNjkZZ2flTF0zcX1XNX7r830GeRyNrwkS5tesG+t
	wKjw==
X-Gm-Message-State: AO0yUKXjhdSuhHXQhVik1EHukK9a1+tlvGTQLgbXYM8D8jK/odjMUpuQ
	fpyW7hPBO0cLDMXO4MuNW+8fdTQK
X-Google-Smtp-Source: AK7set/gO/C+StERSREkVC9HCS1ahuWk9uT9Fy53EKlngR1qJ/Y8ZU8/NbtoV4FVUXmZyvAlpr0Kxw==
X-Received: by 2002:aa7:de99:0:b0:4ad:7c30:2596 with SMTP id
	j25-20020aa7de99000000b004ad7c302596mr10156513edv.3.1677761728172;
	Thu, 02 Mar 2023 04:55:28 -0800 (PST)
Received: from localhost.localdomain (h082218028181.host.wavenet.at.
	[82.218.28.181]) by smtp.gmail.com with ESMTPSA id
	a98-20020a509eeb000000b004ad601533a3sm6955034edf.55.2023.03.02.04.55.26
	(version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
	Thu, 02 Mar 2023 04:55:27 -0800 (PST)
From: =?UTF-8?q?Christoph=20B=C3=B6hmwalder?=
	<christoph.boehmwalder@linbit.com>
To: Jens Axboe <axboe@kernel.dk>
Date: Thu,  2 Mar 2023 13:54:41 +0100
Message-Id: <20230302125445.2653493-4-christoph.boehmwalder@linbit.com>
X-Mailer: git-send-email 2.39.1
In-Reply-To: <20230302125445.2653493-1-christoph.boehmwalder@linbit.com>
References: <20230302125445.2653493-1-christoph.boehmwalder@linbit.com>
MIME-Version: 1.0
Cc: Andreas Gruenbacher <agruen@kernel.org>,
	Philipp Reisner <philipp.reisner@linbit.com>,
	linux-kernel@vger.kernel.org, linux-block@vger.kernel.org,
	Lars Ellenberg <lars.ellenberg@linbit.com>, drbd-dev@lists.linbit.com
Subject: [Drbd-dev] [PATCH v2 3/7] drbd: Add peer device parameter to
	whole-bitmap I/O handlers
X-BeenThere: drbd-dev@lists.linbit.com
X-Mailman-Version: 2.1.11
Precedence: list
List-Id: "*Coordination* of development, patches,
	contributions -- *Questions* \(even to developers\) go to drbd-user,
	please." <drbd-dev.lists.linbit.com>
List-Unsubscribe: <https://lists.linbit.com/mailman/options/drbd-dev>,
	<mailto:drbd-dev-request@lists.linbit.com?subject=unsubscribe>
List-Archive: <http://lists.linbit.com/pipermail/drbd-dev>
List-Post: <mailto:drbd-dev@lists.linbit.com>
List-Help: <mailto:drbd-dev-request@lists.linbit.com?subject=help>
List-Subscribe: <https://lists.linbit.com/mailman/listinfo/drbd-dev>,
	<mailto:drbd-dev-request@lists.linbit.com?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Sender: drbd-dev-bounces@lists.linbit.com
Errors-To: drbd-dev-bounces@lists.linbit.com

RnJvbTogQW5kcmVhcyBHcnVlbmJhY2hlciA8YWdydWVuQGtlcm5lbC5vcmc+CgpQYXNzIGEgcGVl
ciBkZXZpY2UgcGFyYW1ldGVyIHRocm91Z2ggdGhlIGJpdG1hcCBJL08gZnVuY3Rpb25zIHRvIHRo
ZSBJL08KaGFuZGxlcnMuICBJbiBhZnRlcl9zdGF0ZV9jaCgpLCBzZXQgdGhhdCBwYXJhbWV0ZXIg
d2hlbiBxdWV1aW5nIHRoZQpkcmJkX3NlbmRfYml0bWFwIG9wZXJhdGlvbiBzbyB0aGF0IHRoaXMg
b3BlcmF0aW9uIGtub3dzIHdoZXJlIHRvIHNlbmQgdGhlCmJpdG1hcC4KClNpZ25lZC1vZmYtYnk6
IEFuZHJlYXMgR3J1ZW5iYWNoZXIgPGFncnVlbkBrZXJuZWwub3JnPgpTaWduZWQtb2ZmLWJ5OiBD
aHJpc3RvcGggQsO2aG13YWxkZXIgPGNocmlzdG9waC5ib2VobXdhbGRlckBsaW5iaXQuY29tPgot
LS0KIGRyaXZlcnMvYmxvY2svZHJiZC9kcmJkX2JpdG1hcC5jICAgfCAxMyArKysrLS0tCiBkcml2
ZXJzL2Jsb2NrL2RyYmQvZHJiZF9pbnQuaCAgICAgIHwgMzkgKysrKysrKysrKysrLS0tLS0tLS0K
IGRyaXZlcnMvYmxvY2svZHJiZC9kcmJkX21haW4uYyAgICAgfCA1NyArKysrKysrKysrKysrKysr
KystLS0tLS0tLS0tLS0KIGRyaXZlcnMvYmxvY2svZHJiZC9kcmJkX25sLmMgICAgICAgfCAxOSAr
KysrKy0tLS0tCiBkcml2ZXJzL2Jsb2NrL2RyYmQvZHJiZF9yZWNlaXZlci5jIHwgIDggKystLS0K
IGRyaXZlcnMvYmxvY2svZHJiZC9kcmJkX3N0YXRlLmMgICAgfCAxOSArKysrKy0tLS0tCiBkcml2
ZXJzL2Jsb2NrL2RyYmQvZHJiZF93b3JrZXIuYyAgIHwgIDMgKy0KIDcgZmlsZXMgY2hhbmdlZCwg
OTYgaW5zZXJ0aW9ucygrKSwgNjIgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9i
bG9jay9kcmJkL2RyYmRfYml0bWFwLmMgYi9kcml2ZXJzL2Jsb2NrL2RyYmQvZHJiZF9iaXRtYXAu
YwppbmRleCAyODk4NzZmZmJjMzEuLjZhYzhjNTRiNDRjNyAxMDA2NDQKLS0tIGEvZHJpdmVycy9i
bG9jay9kcmJkL2RyYmRfYml0bWFwLmMKKysrIGIvZHJpdmVycy9ibG9jay9kcmJkL2RyYmRfYml0
bWFwLmMKQEAgLTEyMTYsNyArMTIxNiw5IEBAIHN0YXRpYyBpbnQgYm1fcncoc3RydWN0IGRyYmRf
ZGV2aWNlICpkZXZpY2UsIGNvbnN0IHVuc2lnbmVkIGludCBmbGFncywgdW5zaWduZWQKICAqIGRy
YmRfYm1fcmVhZCgpIC0gUmVhZCB0aGUgd2hvbGUgYml0bWFwIGZyb20gaXRzIG9uIGRpc2sgbG9j
YXRpb24uCiAgKiBAZGV2aWNlOglEUkJEIGRldmljZS4KICAqLwotaW50IGRyYmRfYm1fcmVhZChz
dHJ1Y3QgZHJiZF9kZXZpY2UgKmRldmljZSkgX19tdXN0X2hvbGQobG9jYWwpCitpbnQgZHJiZF9i
bV9yZWFkKHN0cnVjdCBkcmJkX2RldmljZSAqZGV2aWNlLAorCQkgc3RydWN0IGRyYmRfcGVlcl9k
ZXZpY2UgKnBlZXJfZGV2aWNlKSBfX211c3RfaG9sZChsb2NhbCkKKwogewogCXJldHVybiBibV9y
dyhkZXZpY2UsIEJNX0FJT19SRUFELCAwKTsKIH0KQEAgLTEyMjcsNyArMTIyOSw4IEBAIGludCBk
cmJkX2JtX3JlYWQoc3RydWN0IGRyYmRfZGV2aWNlICpkZXZpY2UpIF9fbXVzdF9ob2xkKGxvY2Fs
KQogICoKICAqIFdpbGwgb25seSB3cml0ZSBwYWdlcyB0aGF0IGhhdmUgY2hhbmdlZCBzaW5jZSBs
YXN0IElPLgogICovCi1pbnQgZHJiZF9ibV93cml0ZShzdHJ1Y3QgZHJiZF9kZXZpY2UgKmRldmlj
ZSkgX19tdXN0X2hvbGQobG9jYWwpCitpbnQgZHJiZF9ibV93cml0ZShzdHJ1Y3QgZHJiZF9kZXZp
Y2UgKmRldmljZSwKKwkJIHN0cnVjdCBkcmJkX3BlZXJfZGV2aWNlICpwZWVyX2RldmljZSkgX19t
dXN0X2hvbGQobG9jYWwpCiB7CiAJcmV0dXJuIGJtX3J3KGRldmljZSwgMCwgMCk7CiB9CkBAIC0x
MjM4LDcgKzEyNDEsOCBAQCBpbnQgZHJiZF9ibV93cml0ZShzdHJ1Y3QgZHJiZF9kZXZpY2UgKmRl
dmljZSkgX19tdXN0X2hvbGQobG9jYWwpCiAgKgogICogV2lsbCB3cml0ZSBhbGwgcGFnZXMuCiAg
Ki8KLWludCBkcmJkX2JtX3dyaXRlX2FsbChzdHJ1Y3QgZHJiZF9kZXZpY2UgKmRldmljZSkgX19t
dXN0X2hvbGQobG9jYWwpCitpbnQgZHJiZF9ibV93cml0ZV9hbGwoc3RydWN0IGRyYmRfZGV2aWNl
ICpkZXZpY2UsCisJCXN0cnVjdCBkcmJkX3BlZXJfZGV2aWNlICpwZWVyX2RldmljZSkgX19tdXN0
X2hvbGQobG9jYWwpCiB7CiAJcmV0dXJuIGJtX3J3KGRldmljZSwgQk1fQUlPX1dSSVRFX0FMTF9Q
QUdFUywgMCk7CiB9CkBAIC0xMjY0LDcgKzEyNjgsOCBAQCBpbnQgZHJiZF9ibV93cml0ZV9sYXp5
KHN0cnVjdCBkcmJkX2RldmljZSAqZGV2aWNlLCB1bnNpZ25lZCB1cHBlcl9pZHgpIF9fbXVzdF9o
bwogICogdmVyaWZ5IGlzIGFib3J0ZWQgZHVlIHRvIGEgZmFpbGVkIHBlZXIgZGlzaywgd2hpbGUg
bG9jYWwgSU8gY29udGludWVzLCBvcgogICogcGVuZGluZyByZXN5bmMgYWNrcyBhcmUgc3RpbGwg
YmVpbmcgcHJvY2Vzc2VkLgogICovCi1pbnQgZHJiZF9ibV93cml0ZV9jb3B5X3BhZ2VzKHN0cnVj
dCBkcmJkX2RldmljZSAqZGV2aWNlKSBfX211c3RfaG9sZChsb2NhbCkKK2ludCBkcmJkX2JtX3dy
aXRlX2NvcHlfcGFnZXMoc3RydWN0IGRyYmRfZGV2aWNlICpkZXZpY2UsCisJCXN0cnVjdCBkcmJk
X3BlZXJfZGV2aWNlICpwZWVyX2RldmljZSkgX19tdXN0X2hvbGQobG9jYWwpCiB7CiAJcmV0dXJu
IGJtX3J3KGRldmljZSwgQk1fQUlPX0NPUFlfUEFHRVMsIDApOwogfQpkaWZmIC0tZ2l0IGEvZHJp
dmVycy9ibG9jay9kcmJkL2RyYmRfaW50LmggYi9kcml2ZXJzL2Jsb2NrL2RyYmQvZHJiZF9pbnQu
aAppbmRleCA3NzIwMjNhY2U3NDkuLjdiZDEwMDg5YmZjOSAxMDA2NDQKLS0tIGEvZHJpdmVycy9i
bG9jay9kcmJkL2RyYmRfaW50LmgKKysrIGIvZHJpdmVycy9ibG9jay9kcmJkL2RyYmRfaW50LmgK
QEAgLTY2LDYgKzY2LDcgQEAgZXh0ZXJuIGludCBkcmJkX3Byb2NfZGV0YWlsczsKIAogc3RydWN0
IGRyYmRfZGV2aWNlOwogc3RydWN0IGRyYmRfY29ubmVjdGlvbjsKK3N0cnVjdCBkcmJkX3BlZXJf
ZGV2aWNlOwogCiAvKiBEZWZpbmVzIHRvIGNvbnRyb2wgZmF1bHQgaW5zZXJ0aW9uICovCiBlbnVt
IHsKQEAgLTU0MSw5ICs1NDIsMTAgQEAgc3RydWN0IGRyYmRfbWRfaW8gewogCiBzdHJ1Y3QgYm1f
aW9fd29yayB7CiAJc3RydWN0IGRyYmRfd29yayB3OworCXN0cnVjdCBkcmJkX3BlZXJfZGV2aWNl
ICpwZWVyX2RldmljZTsKIAljaGFyICp3aHk7CiAJZW51bSBibV9mbGFnIGZsYWdzOwotCWludCAo
KmlvX2ZuKShzdHJ1Y3QgZHJiZF9kZXZpY2UgKmRldmljZSk7CisJaW50ICgqaW9fZm4pKHN0cnVj
dCBkcmJkX2RldmljZSAqZGV2aWNlLCBzdHJ1Y3QgZHJiZF9wZWVyX2RldmljZSAqcGVlcl9kZXZp
Y2UpOwogCXZvaWQgKCpkb25lKShzdHJ1Y3QgZHJiZF9kZXZpY2UgKmRldmljZSwgaW50IHJ2KTsK
IH07CiAKQEAgLTEwNDEsNyArMTA0Myw3IEBAIGV4dGVybiBpbnQgZHJiZF9zZW5kX2RyZXF1ZXN0
X2NzdW0oc3RydWN0IGRyYmRfcGVlcl9kZXZpY2UgKiwgc2VjdG9yX3Qgc2VjdG9yLAogCQkJCSAg
IGVudW0gZHJiZF9wYWNrZXQgY21kKTsKIGV4dGVybiBpbnQgZHJiZF9zZW5kX292X3JlcXVlc3Qo
c3RydWN0IGRyYmRfcGVlcl9kZXZpY2UgKiwgc2VjdG9yX3Qgc2VjdG9yLCBpbnQgc2l6ZSk7CiAK
LWV4dGVybiBpbnQgZHJiZF9zZW5kX2JpdG1hcChzdHJ1Y3QgZHJiZF9kZXZpY2UgKmRldmljZSk7
CitleHRlcm4gaW50IGRyYmRfc2VuZF9iaXRtYXAoc3RydWN0IGRyYmRfZGV2aWNlICpkZXZpY2Us
IHN0cnVjdCBkcmJkX3BlZXJfZGV2aWNlICpwZWVyX2RldmljZSk7CiBleHRlcm4gdm9pZCBkcmJk
X3NlbmRfc3JfcmVwbHkoc3RydWN0IGRyYmRfcGVlcl9kZXZpY2UgKiwgZW51bSBkcmJkX3N0YXRl
X3J2IHJldGNvZGUpOwogZXh0ZXJuIHZvaWQgY29ubl9zZW5kX3NyX3JlcGx5KHN0cnVjdCBkcmJk
X2Nvbm5lY3Rpb24gKmNvbm5lY3Rpb24sIGVudW0gZHJiZF9zdGF0ZV9ydiByZXRjb2RlKTsKIGV4
dGVybiBpbnQgZHJiZF9zZW5kX3JzX2RlYWxsb2NhdGVkKHN0cnVjdCBkcmJkX3BlZXJfZGV2aWNl
ICosIHN0cnVjdCBkcmJkX3BlZXJfcmVxdWVzdCAqKTsKQEAgLTEwNjUsMTcgKzEwNjcsMjIgQEAg
ZXh0ZXJuIHZvaWQgZHJiZF9tZF9jbGVhcl9mbGFnKHN0cnVjdCBkcmJkX2RldmljZSAqZGV2aWNl
LCBpbnQgZmxhZ3MpX19tdXN0X2hvbGQKIGV4dGVybiBpbnQgZHJiZF9tZF90ZXN0X2ZsYWcoc3Ry
dWN0IGRyYmRfYmFja2luZ19kZXYgKiwgaW50KTsKIGV4dGVybiB2b2lkIGRyYmRfbWRfbWFya19k
aXJ0eShzdHJ1Y3QgZHJiZF9kZXZpY2UgKmRldmljZSk7CiBleHRlcm4gdm9pZCBkcmJkX3F1ZXVl
X2JpdG1hcF9pbyhzdHJ1Y3QgZHJiZF9kZXZpY2UgKmRldmljZSwKLQkJCQkgaW50ICgqaW9fZm4p
KHN0cnVjdCBkcmJkX2RldmljZSAqKSwKKwkJCQkgaW50ICgqaW9fZm4pKHN0cnVjdCBkcmJkX2Rl
dmljZSAqLCBzdHJ1Y3QgZHJiZF9wZWVyX2RldmljZSAqKSwKIAkJCQkgdm9pZCAoKmRvbmUpKHN0
cnVjdCBkcmJkX2RldmljZSAqLCBpbnQpLAotCQkJCSBjaGFyICp3aHksIGVudW0gYm1fZmxhZyBm
bGFncyk7CisJCQkJIGNoYXIgKndoeSwgZW51bSBibV9mbGFnIGZsYWdzLAorCQkJCSBzdHJ1Y3Qg
ZHJiZF9wZWVyX2RldmljZSAqcGVlcl9kZXZpY2UpOwogZXh0ZXJuIGludCBkcmJkX2JpdG1hcF9p
byhzdHJ1Y3QgZHJiZF9kZXZpY2UgKmRldmljZSwKLQkJaW50ICgqaW9fZm4pKHN0cnVjdCBkcmJk
X2RldmljZSAqKSwKLQkJY2hhciAqd2h5LCBlbnVtIGJtX2ZsYWcgZmxhZ3MpOworCQlpbnQgKCpp
b19mbikoc3RydWN0IGRyYmRfZGV2aWNlICosIHN0cnVjdCBkcmJkX3BlZXJfZGV2aWNlICopLAor
CQljaGFyICp3aHksIGVudW0gYm1fZmxhZyBmbGFncywKKwkJc3RydWN0IGRyYmRfcGVlcl9kZXZp
Y2UgKnBlZXJfZGV2aWNlKTsKIGV4dGVybiBpbnQgZHJiZF9iaXRtYXBfaW9fZnJvbV93b3JrZXIo
c3RydWN0IGRyYmRfZGV2aWNlICpkZXZpY2UsCi0JCWludCAoKmlvX2ZuKShzdHJ1Y3QgZHJiZF9k
ZXZpY2UgKiksCi0JCWNoYXIgKndoeSwgZW51bSBibV9mbGFnIGZsYWdzKTsKLWV4dGVybiBpbnQg
ZHJiZF9ibWlvX3NldF9uX3dyaXRlKHN0cnVjdCBkcmJkX2RldmljZSAqZGV2aWNlKSBfX211c3Rf
aG9sZChsb2NhbCk7Ci1leHRlcm4gaW50IGRyYmRfYm1pb19jbGVhcl9uX3dyaXRlKHN0cnVjdCBk
cmJkX2RldmljZSAqZGV2aWNlKSBfX211c3RfaG9sZChsb2NhbCk7CisJCWludCAoKmlvX2ZuKShz
dHJ1Y3QgZHJiZF9kZXZpY2UgKiwgc3RydWN0IGRyYmRfcGVlcl9kZXZpY2UgKiksCisJCWNoYXIg
KndoeSwgZW51bSBibV9mbGFnIGZsYWdzLAorCQlzdHJ1Y3QgZHJiZF9wZWVyX2RldmljZSAqcGVl
cl9kZXZpY2UpOworZXh0ZXJuIGludCBkcmJkX2JtaW9fc2V0X25fd3JpdGUoc3RydWN0IGRyYmRf
ZGV2aWNlICpkZXZpY2UsCisJCXN0cnVjdCBkcmJkX3BlZXJfZGV2aWNlICpwZWVyX2RldmljZSkg
X19tdXN0X2hvbGQobG9jYWwpOworZXh0ZXJuIGludCBkcmJkX2JtaW9fY2xlYXJfbl93cml0ZShz
dHJ1Y3QgZHJiZF9kZXZpY2UgKmRldmljZSwKKwkJc3RydWN0IGRyYmRfcGVlcl9kZXZpY2UgKnBl
ZXJfZGV2aWNlKSBfX211c3RfaG9sZChsb2NhbCk7CiAKIC8qIE1ldGEgZGF0YSBsYXlvdXQKICAq
CkBAIC0xMjg0LDE0ICsxMjkxLDE4IEBAIGV4dGVybiB2b2lkIF9kcmJkX2JtX3NldF9iaXRzKHN0
cnVjdCBkcmJkX2RldmljZSAqZGV2aWNlLAogCQljb25zdCB1bnNpZ25lZCBsb25nIHMsIGNvbnN0
IHVuc2lnbmVkIGxvbmcgZSk7CiBleHRlcm4gaW50ICBkcmJkX2JtX3Rlc3RfYml0KHN0cnVjdCBk
cmJkX2RldmljZSAqZGV2aWNlLCB1bnNpZ25lZCBsb25nIGJpdG5yKTsKIGV4dGVybiBpbnQgIGRy
YmRfYm1fZV93ZWlnaHQoc3RydWN0IGRyYmRfZGV2aWNlICpkZXZpY2UsIHVuc2lnbmVkIGxvbmcg
ZW5yKTsKLWV4dGVybiBpbnQgIGRyYmRfYm1fcmVhZChzdHJ1Y3QgZHJiZF9kZXZpY2UgKmRldmlj
ZSkgX19tdXN0X2hvbGQobG9jYWwpOworZXh0ZXJuIGludCAgZHJiZF9ibV9yZWFkKHN0cnVjdCBk
cmJkX2RldmljZSAqZGV2aWNlLAorCQlzdHJ1Y3QgZHJiZF9wZWVyX2RldmljZSAqcGVlcl9kZXZp
Y2UpIF9fbXVzdF9ob2xkKGxvY2FsKTsKIGV4dGVybiB2b2lkIGRyYmRfYm1fbWFya19mb3Jfd3Jp
dGVvdXQoc3RydWN0IGRyYmRfZGV2aWNlICpkZXZpY2UsIGludCBwYWdlX25yKTsKLWV4dGVybiBp
bnQgIGRyYmRfYm1fd3JpdGUoc3RydWN0IGRyYmRfZGV2aWNlICpkZXZpY2UpIF9fbXVzdF9ob2xk
KGxvY2FsKTsKK2V4dGVybiBpbnQgIGRyYmRfYm1fd3JpdGUoc3RydWN0IGRyYmRfZGV2aWNlICpk
ZXZpY2UsCisJCXN0cnVjdCBkcmJkX3BlZXJfZGV2aWNlICpwZWVyX2RldmljZSkgX19tdXN0X2hv
bGQobG9jYWwpOwogZXh0ZXJuIHZvaWQgZHJiZF9ibV9yZXNldF9hbF9oaW50cyhzdHJ1Y3QgZHJi
ZF9kZXZpY2UgKmRldmljZSkgX19tdXN0X2hvbGQobG9jYWwpOwogZXh0ZXJuIGludCAgZHJiZF9i
bV93cml0ZV9oaW50ZWQoc3RydWN0IGRyYmRfZGV2aWNlICpkZXZpY2UpIF9fbXVzdF9ob2xkKGxv
Y2FsKTsKIGV4dGVybiBpbnQgIGRyYmRfYm1fd3JpdGVfbGF6eShzdHJ1Y3QgZHJiZF9kZXZpY2Ug
KmRldmljZSwgdW5zaWduZWQgdXBwZXJfaWR4KSBfX211c3RfaG9sZChsb2NhbCk7Ci1leHRlcm4g
aW50IGRyYmRfYm1fd3JpdGVfYWxsKHN0cnVjdCBkcmJkX2RldmljZSAqZGV2aWNlKSBfX211c3Rf
aG9sZChsb2NhbCk7Ci1leHRlcm4gaW50ICBkcmJkX2JtX3dyaXRlX2NvcHlfcGFnZXMoc3RydWN0
IGRyYmRfZGV2aWNlICpkZXZpY2UpIF9fbXVzdF9ob2xkKGxvY2FsKTsKK2V4dGVybiBpbnQgZHJi
ZF9ibV93cml0ZV9hbGwoc3RydWN0IGRyYmRfZGV2aWNlICpkZXZpY2UsCisJCXN0cnVjdCBkcmJk
X3BlZXJfZGV2aWNlICpwZWVyX2RldmljZSkgX19tdXN0X2hvbGQobG9jYWwpOworZXh0ZXJuIGlu
dCAgZHJiZF9ibV93cml0ZV9jb3B5X3BhZ2VzKHN0cnVjdCBkcmJkX2RldmljZSAqZGV2aWNlLAor
CQlzdHJ1Y3QgZHJiZF9wZWVyX2RldmljZSAqcGVlcl9kZXZpY2UpIF9fbXVzdF9ob2xkKGxvY2Fs
KTsKIGV4dGVybiBzaXplX3QJICAgICBkcmJkX2JtX3dvcmRzKHN0cnVjdCBkcmJkX2RldmljZSAq
ZGV2aWNlKTsKIGV4dGVybiB1bnNpZ25lZCBsb25nIGRyYmRfYm1fYml0cyhzdHJ1Y3QgZHJiZF9k
ZXZpY2UgKmRldmljZSk7CiBleHRlcm4gc2VjdG9yX3QgICAgICBkcmJkX2JtX2NhcGFjaXR5KHN0
cnVjdCBkcmJkX2RldmljZSAqZGV2aWNlKTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvYmxvY2svZHJi
ZC9kcmJkX21haW4uYyBiL2RyaXZlcnMvYmxvY2svZHJiZC9kcmJkX21haW4uYwppbmRleCAyYzc2
NGY3ZWU0YTcuLjE3OGE3YWU0MGFmOCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ibG9jay9kcmJkL2Ry
YmRfbWFpbi5jCisrKyBiL2RyaXZlcnMvYmxvY2svZHJiZC9kcmJkX21haW4uYwpAQCAtMTE5OCwx
MCArMTE5OCwxMSBAQCBzdGF0aWMgaW50IGZpbGxfYml0bWFwX3JsZV9iaXRzKHN0cnVjdCBkcmJk
X2RldmljZSAqZGV2aWNlLAogICogY29kZSB1cG9uIGZhaWx1cmUuCiAgKi8KIHN0YXRpYyBpbnQK
LXNlbmRfYml0bWFwX3JsZV9vcl9wbGFpbihzdHJ1Y3QgZHJiZF9kZXZpY2UgKmRldmljZSwgc3Ry
dWN0IGJtX3hmZXJfY3R4ICpjKQorc2VuZF9iaXRtYXBfcmxlX29yX3BsYWluKHN0cnVjdCBkcmJk
X3BlZXJfZGV2aWNlICpwZWVyX2RldmljZSwgc3RydWN0IGJtX3hmZXJfY3R4ICpjKQogewotCXN0
cnVjdCBkcmJkX3NvY2tldCAqc29jayA9ICZmaXJzdF9wZWVyX2RldmljZShkZXZpY2UpLT5jb25u
ZWN0aW9uLT5kYXRhOwotCXVuc2lnbmVkIGludCBoZWFkZXJfc2l6ZSA9IGRyYmRfaGVhZGVyX3Np
emUoZmlyc3RfcGVlcl9kZXZpY2UoZGV2aWNlKS0+Y29ubmVjdGlvbik7CisJc3RydWN0IGRyYmRf
ZGV2aWNlICpkZXZpY2UgPSBwZWVyX2RldmljZS0+ZGV2aWNlOworCXN0cnVjdCBkcmJkX3NvY2tl
dCAqc29jayA9ICZwZWVyX2RldmljZS0+Y29ubmVjdGlvbi0+ZGF0YTsKKwl1bnNpZ25lZCBpbnQg
aGVhZGVyX3NpemUgPSBkcmJkX2hlYWRlcl9zaXplKHBlZXJfZGV2aWNlLT5jb25uZWN0aW9uKTsK
IAlzdHJ1Y3QgcF9jb21wcmVzc2VkX2JtICpwID0gc29jay0+c2J1ZiArIGhlYWRlcl9zaXplOwog
CWludCBsZW4sIGVycjsKIApAQCAtMTIxMiw3ICsxMjEzLDcgQEAgc2VuZF9iaXRtYXBfcmxlX29y
X3BsYWluKHN0cnVjdCBkcmJkX2RldmljZSAqZGV2aWNlLCBzdHJ1Y3QgYm1feGZlcl9jdHggKmMp
CiAKIAlpZiAobGVuKSB7CiAJCWRjYnBfc2V0X2NvZGUocCwgUkxFX1ZMSV9CaXRzKTsKLQkJZXJy
ID0gX19zZW5kX2NvbW1hbmQoZmlyc3RfcGVlcl9kZXZpY2UoZGV2aWNlKS0+Y29ubmVjdGlvbiwg
ZGV2aWNlLT52bnIsIHNvY2ssCisJCWVyciA9IF9fc2VuZF9jb21tYW5kKHBlZXJfZGV2aWNlLT5j
b25uZWN0aW9uLCBkZXZpY2UtPnZuciwgc29jaywKIAkJCQkgICAgIFBfQ09NUFJFU1NFRF9CSVRN
QVAsIHNpemVvZigqcCkgKyBsZW4sCiAJCQkJICAgICBOVUxMLCAwKTsKIAkJYy0+cGFja2V0c1sw
XSsrOwpAQCAtMTIzMyw3ICsxMjM0LDggQEAgc2VuZF9iaXRtYXBfcmxlX29yX3BsYWluKHN0cnVj
dCBkcmJkX2RldmljZSAqZGV2aWNlLCBzdHJ1Y3QgYm1feGZlcl9jdHggKmMpCiAJCWxlbiA9IG51
bV93b3JkcyAqIHNpemVvZigqcCk7CiAJCWlmIChsZW4pCiAJCQlkcmJkX2JtX2dldF9sZWwoZGV2
aWNlLCBjLT53b3JkX29mZnNldCwgbnVtX3dvcmRzLCBwKTsKLQkJZXJyID0gX19zZW5kX2NvbW1h
bmQoZmlyc3RfcGVlcl9kZXZpY2UoZGV2aWNlKS0+Y29ubmVjdGlvbiwgZGV2aWNlLT52bnIsIHNv
Y2ssIFBfQklUTUFQLCBsZW4sIE5VTEwsIDApOworCQllcnIgPSBfX3NlbmRfY29tbWFuZChwZWVy
X2RldmljZS0+Y29ubmVjdGlvbiwgZGV2aWNlLT52bnIsIHNvY2ssIFBfQklUTUFQLAorCQkJCSAg
ICAgbGVuLCBOVUxMLCAwKTsKIAkJYy0+d29yZF9vZmZzZXQgKz0gbnVtX3dvcmRzOwogCQljLT5i
aXRfb2Zmc2V0ID0gYy0+d29yZF9vZmZzZXQgKiBCSVRTX1BFUl9MT05HOwogCkBAIC0xMjU0LDcg
KzEyNTYsOCBAQCBzZW5kX2JpdG1hcF9ybGVfb3JfcGxhaW4oc3RydWN0IGRyYmRfZGV2aWNlICpk
ZXZpY2UsIHN0cnVjdCBibV94ZmVyX2N0eCAqYykKIH0KIAogLyogU2VlIHRoZSBjb21tZW50IGF0
IHJlY2VpdmVfYml0bWFwKCkgKi8KLXN0YXRpYyBpbnQgX2RyYmRfc2VuZF9iaXRtYXAoc3RydWN0
IGRyYmRfZGV2aWNlICpkZXZpY2UpCitzdGF0aWMgaW50IF9kcmJkX3NlbmRfYml0bWFwKHN0cnVj
dCBkcmJkX2RldmljZSAqZGV2aWNlLAorCQkJICAgIHN0cnVjdCBkcmJkX3BlZXJfZGV2aWNlICpw
ZWVyX2RldmljZSkKIHsKIAlzdHJ1Y3QgYm1feGZlcl9jdHggYzsKIAlpbnQgZXJyOwpAQCAtMTI2
Niw3ICsxMjY5LDcgQEAgc3RhdGljIGludCBfZHJiZF9zZW5kX2JpdG1hcChzdHJ1Y3QgZHJiZF9k
ZXZpY2UgKmRldmljZSkKIAkJaWYgKGRyYmRfbWRfdGVzdF9mbGFnKGRldmljZS0+bGRldiwgTURG
X0ZVTExfU1lOQykpIHsKIAkJCWRyYmRfaW5mbyhkZXZpY2UsICJXcml0aW5nIHRoZSB3aG9sZSBi
aXRtYXAsIE1ERl9GdWxsU3luYyB3YXMgc2V0LlxuIik7CiAJCQlkcmJkX2JtX3NldF9hbGwoZGV2
aWNlKTsKLQkJCWlmIChkcmJkX2JtX3dyaXRlKGRldmljZSkpIHsKKwkJCWlmIChkcmJkX2JtX3dy
aXRlKGRldmljZSwgcGVlcl9kZXZpY2UpKSB7CiAJCQkJLyogd3JpdGVfYm0gZGlkIGZhaWwhIExl
YXZlIGZ1bGwgc3luYyBmbGFnIHNldCBpbiBNZXRhIFBfREFUQQogCQkJCSAqIGJ1dCBvdGhlcndp
c2UgcHJvY2VzcyBhcyBwZXIgbm9ybWFsIC0gbmVlZCB0byB0ZWxsIG90aGVyCiAJCQkJICogc2lk
ZSB0aGF0IGEgZnVsbCByZXN5bmMgaXMgcmVxdWlyZWQhICovCkBAIC0xMjg1LDIwICsxMjg4LDIw
IEBAIHN0YXRpYyBpbnQgX2RyYmRfc2VuZF9iaXRtYXAoc3RydWN0IGRyYmRfZGV2aWNlICpkZXZp
Y2UpCiAJfTsKIAogCWRvIHsKLQkJZXJyID0gc2VuZF9iaXRtYXBfcmxlX29yX3BsYWluKGRldmlj
ZSwgJmMpOworCQllcnIgPSBzZW5kX2JpdG1hcF9ybGVfb3JfcGxhaW4ocGVlcl9kZXZpY2UsICZj
KTsKIAl9IHdoaWxlIChlcnIgPiAwKTsKIAogCXJldHVybiBlcnIgPT0gMDsKIH0KIAotaW50IGRy
YmRfc2VuZF9iaXRtYXAoc3RydWN0IGRyYmRfZGV2aWNlICpkZXZpY2UpCitpbnQgZHJiZF9zZW5k
X2JpdG1hcChzdHJ1Y3QgZHJiZF9kZXZpY2UgKmRldmljZSwgc3RydWN0IGRyYmRfcGVlcl9kZXZp
Y2UgKnBlZXJfZGV2aWNlKQogewotCXN0cnVjdCBkcmJkX3NvY2tldCAqc29jayA9ICZmaXJzdF9w
ZWVyX2RldmljZShkZXZpY2UpLT5jb25uZWN0aW9uLT5kYXRhOworCXN0cnVjdCBkcmJkX3NvY2tl
dCAqc29jayA9ICZwZWVyX2RldmljZS0+Y29ubmVjdGlvbi0+ZGF0YTsKIAlpbnQgZXJyID0gLTE7
CiAKIAltdXRleF9sb2NrKCZzb2NrLT5tdXRleCk7CiAJaWYgKHNvY2stPnNvY2tldCkKLQkJZXJy
ID0gIV9kcmJkX3NlbmRfYml0bWFwKGRldmljZSk7CisJCWVyciA9ICFfZHJiZF9zZW5kX2JpdG1h
cChkZXZpY2UsIHBlZXJfZGV2aWNlKTsKIAltdXRleF91bmxvY2soJnNvY2stPm11dGV4KTsKIAly
ZXR1cm4gZXJyOwogfQpAQCAtMzQwNiw3ICszNDA5LDkgQEAgdm9pZCBkcmJkX3V1aWRfc2V0X2Jt
KHN0cnVjdCBkcmJkX2RldmljZSAqZGV2aWNlLCB1NjQgdmFsKSBfX211c3RfaG9sZChsb2NhbCkK
ICAqCiAgKiBTZXRzIGFsbCBiaXRzIGluIHRoZSBiaXRtYXAgYW5kIHdyaXRlcyB0aGUgd2hvbGUg
Yml0bWFwIHRvIHN0YWJsZSBzdG9yYWdlLgogICovCi1pbnQgZHJiZF9ibWlvX3NldF9uX3dyaXRl
KHN0cnVjdCBkcmJkX2RldmljZSAqZGV2aWNlKSBfX211c3RfaG9sZChsb2NhbCkKK2ludCBkcmJk
X2JtaW9fc2V0X25fd3JpdGUoc3RydWN0IGRyYmRfZGV2aWNlICpkZXZpY2UsCisJCQkgIHN0cnVj
dCBkcmJkX3BlZXJfZGV2aWNlICpwZWVyX2RldmljZSkgX19tdXN0X2hvbGQobG9jYWwpCisKIHsK
IAlpbnQgcnYgPSAtRUlPOwogCkBAIC0zNDE0LDcgKzM0MTksNyBAQCBpbnQgZHJiZF9ibWlvX3Nl
dF9uX3dyaXRlKHN0cnVjdCBkcmJkX2RldmljZSAqZGV2aWNlKSBfX211c3RfaG9sZChsb2NhbCkK
IAlkcmJkX21kX3N5bmMoZGV2aWNlKTsKIAlkcmJkX2JtX3NldF9hbGwoZGV2aWNlKTsKIAotCXJ2
ID0gZHJiZF9ibV93cml0ZShkZXZpY2UpOworCXJ2ID0gZHJiZF9ibV93cml0ZShkZXZpY2UsIHBl
ZXJfZGV2aWNlKTsKIAogCWlmICghcnYpIHsKIAkJZHJiZF9tZF9jbGVhcl9mbGFnKGRldmljZSwg
TURGX0ZVTExfU1lOQyk7CkBAIC0zNDMwLDExICszNDM1LDEzIEBAIGludCBkcmJkX2JtaW9fc2V0
X25fd3JpdGUoc3RydWN0IGRyYmRfZGV2aWNlICpkZXZpY2UpIF9fbXVzdF9ob2xkKGxvY2FsKQog
ICoKICAqIENsZWFycyBhbGwgYml0cyBpbiB0aGUgYml0bWFwIGFuZCB3cml0ZXMgdGhlIHdob2xl
IGJpdG1hcCB0byBzdGFibGUgc3RvcmFnZS4KICAqLwotaW50IGRyYmRfYm1pb19jbGVhcl9uX3dy
aXRlKHN0cnVjdCBkcmJkX2RldmljZSAqZGV2aWNlKSBfX211c3RfaG9sZChsb2NhbCkKK2ludCBk
cmJkX2JtaW9fY2xlYXJfbl93cml0ZShzdHJ1Y3QgZHJiZF9kZXZpY2UgKmRldmljZSwKKwkJCSAg
c3RydWN0IGRyYmRfcGVlcl9kZXZpY2UgKnBlZXJfZGV2aWNlKSBfX211c3RfaG9sZChsb2NhbCkK
KwogewogCWRyYmRfcmVzdW1lX2FsKGRldmljZSk7CiAJZHJiZF9ibV9jbGVhcl9hbGwoZGV2aWNl
KTsKLQlyZXR1cm4gZHJiZF9ibV93cml0ZShkZXZpY2UpOworCXJldHVybiBkcmJkX2JtX3dyaXRl
KGRldmljZSwgcGVlcl9kZXZpY2UpOwogfQogCiBzdGF0aWMgaW50IHdfYml0bWFwX2lvKHN0cnVj
dCBkcmJkX3dvcmsgKncsIGludCB1bnVzZWQpCkBAIC0zNDUzLDcgKzM0NjAsNyBAQCBzdGF0aWMg
aW50IHdfYml0bWFwX2lvKHN0cnVjdCBkcmJkX3dvcmsgKncsIGludCB1bnVzZWQpCiAKIAlpZiAo
Z2V0X2xkZXYoZGV2aWNlKSkgewogCQlkcmJkX2JtX2xvY2soZGV2aWNlLCB3b3JrLT53aHksIHdv
cmstPmZsYWdzKTsKLQkJcnYgPSB3b3JrLT5pb19mbihkZXZpY2UpOworCQlydiA9IHdvcmstPmlv
X2ZuKGRldmljZSwgd29yay0+cGVlcl9kZXZpY2UpOwogCQlkcmJkX2JtX3VubG9jayhkZXZpY2Up
OwogCQlwdXRfbGRldihkZXZpY2UpOwogCX0KQEAgLTM0ODgsMTEgKzM0OTUsMTIgQEAgc3RhdGlj
IGludCB3X2JpdG1hcF9pbyhzdHJ1Y3QgZHJiZF93b3JrICp3LCBpbnQgdW51c2VkKQogICogcHV0
X2xkZXYoKS4KICAqLwogdm9pZCBkcmJkX3F1ZXVlX2JpdG1hcF9pbyhzdHJ1Y3QgZHJiZF9kZXZp
Y2UgKmRldmljZSwKLQkJCSAgaW50ICgqaW9fZm4pKHN0cnVjdCBkcmJkX2RldmljZSAqKSwKKwkJ
CSAgaW50ICgqaW9fZm4pKHN0cnVjdCBkcmJkX2RldmljZSAqLCBzdHJ1Y3QgZHJiZF9wZWVyX2Rl
dmljZSAqKSwKIAkJCSAgdm9pZCAoKmRvbmUpKHN0cnVjdCBkcmJkX2RldmljZSAqLCBpbnQpLAot
CQkJICBjaGFyICp3aHksIGVudW0gYm1fZmxhZyBmbGFncykKKwkJCSAgY2hhciAqd2h5LCBlbnVt
IGJtX2ZsYWcgZmxhZ3MsCisJCQkgIHN0cnVjdCBkcmJkX3BlZXJfZGV2aWNlICpwZWVyX2Rldmlj
ZSkKIHsKLQlEX0FTU0VSVChkZXZpY2UsIGN1cnJlbnQgPT0gZmlyc3RfcGVlcl9kZXZpY2UoZGV2
aWNlKS0+Y29ubmVjdGlvbi0+d29ya2VyLnRhc2spOworCURfQVNTRVJUKGRldmljZSwgY3VycmVu
dCA9PSBwZWVyX2RldmljZS0+Y29ubmVjdGlvbi0+d29ya2VyLnRhc2spOwogCiAJRF9BU1NFUlQo
ZGV2aWNlLCAhdGVzdF9iaXQoQklUTUFQX0lPX1FVRVVFRCwgJmRldmljZS0+ZmxhZ3MpKTsKIAlE
X0FTU0VSVChkZXZpY2UsICF0ZXN0X2JpdChCSVRNQVBfSU8sICZkZXZpY2UtPmZsYWdzKSk7CkBA
IC0zNTAxLDYgKzM1MDksNyBAQCB2b2lkIGRyYmRfcXVldWVfYml0bWFwX2lvKHN0cnVjdCBkcmJk
X2RldmljZSAqZGV2aWNlLAogCQlkcmJkX2VycihkZXZpY2UsICJGSVhNRSBnb2luZyB0byBxdWV1
ZSAnJXMnIGJ1dCAnJXMnIHN0aWxsIHBlbmRpbmc/XG4iLAogCQkJd2h5LCBkZXZpY2UtPmJtX2lv
X3dvcmsud2h5KTsKIAorCWRldmljZS0+Ym1faW9fd29yay5wZWVyX2RldmljZSA9IHBlZXJfZGV2
aWNlOwogCWRldmljZS0+Ym1faW9fd29yay5pb19mbiA9IGlvX2ZuOwogCWRldmljZS0+Ym1faW9f
d29yay5kb25lID0gZG9uZTsKIAlkZXZpY2UtPmJtX2lvX3dvcmsud2h5ID0gd2h5OwpAQCAtMzUx
Miw3ICszNTIxLDcgQEAgdm9pZCBkcmJkX3F1ZXVlX2JpdG1hcF9pbyhzdHJ1Y3QgZHJiZF9kZXZp
Y2UgKmRldmljZSwKIAkgKiBhcHBsaWNhdGlvbiBJTyBkb2VzIG5vdCBjb25mbGljdCBhbnl3YXlz
LiAqLwogCWlmIChmbGFncyA9PSBCTV9MT0NLRURfQ0hBTkdFX0FMTE9XRUQgfHwgYXRvbWljX3Jl
YWQoJmRldmljZS0+YXBfYmlvX2NudCkgPT0gMCkgewogCQlpZiAoIXRlc3RfYW5kX3NldF9iaXQo
QklUTUFQX0lPX1FVRVVFRCwgJmRldmljZS0+ZmxhZ3MpKQotCQkJZHJiZF9xdWV1ZV93b3JrKCZm
aXJzdF9wZWVyX2RldmljZShkZXZpY2UpLT5jb25uZWN0aW9uLT5zZW5kZXJfd29yaywKKwkJCWRy
YmRfcXVldWVfd29yaygmcGVlcl9kZXZpY2UtPmNvbm5lY3Rpb24tPnNlbmRlcl93b3JrLAogCQkJ
CQkmZGV2aWNlLT5ibV9pb193b3JrLncpOwogCX0KIAlzcGluX3VubG9ja19pcnEoJmRldmljZS0+
cmVzb3VyY2UtPnJlcV9sb2NrKTsKQEAgLTM1MjgsOCArMzUzNywxMCBAQCB2b2lkIGRyYmRfcXVl
dWVfYml0bWFwX2lvKHN0cnVjdCBkcmJkX2RldmljZSAqZGV2aWNlLAogICogZnJlZXplcyBhcHBs
aWNhdGlvbiBJTyB3aGlsZSB0aGF0IHRoZSBhY3R1YWwgSU8gb3BlcmF0aW9ucyBydW5zLiBUaGlz
CiAgKiBmdW5jdGlvbnMgTUFZIE5PVCBiZSBjYWxsZWQgZnJvbSB3b3JrZXIgY29udGV4dC4KICAq
LwotaW50IGRyYmRfYml0bWFwX2lvKHN0cnVjdCBkcmJkX2RldmljZSAqZGV2aWNlLCBpbnQgKCpp
b19mbikoc3RydWN0IGRyYmRfZGV2aWNlICopLAotCQljaGFyICp3aHksIGVudW0gYm1fZmxhZyBm
bGFncykKK2ludCBkcmJkX2JpdG1hcF9pbyhzdHJ1Y3QgZHJiZF9kZXZpY2UgKmRldmljZSwKKwkJ
aW50ICgqaW9fZm4pKHN0cnVjdCBkcmJkX2RldmljZSAqLCBzdHJ1Y3QgZHJiZF9wZWVyX2Rldmlj
ZSAqKSwKKwkJY2hhciAqd2h5LCBlbnVtIGJtX2ZsYWcgZmxhZ3MsCisJCXN0cnVjdCBkcmJkX3Bl
ZXJfZGV2aWNlICpwZWVyX2RldmljZSkKIHsKIAkvKiBPbmx5IHN1c3BlbmQgaW8sIGlmIHNvbWUg
b3BlcmF0aW9uIGlzIHN1cHBvc2VkIHRvIGJlIGxvY2tlZCBvdXQgKi8KIAljb25zdCBib29sIGRv
X3N1c3BlbmRfaW8gPSBmbGFncyAmIChCTV9ET05UX0NMRUFSfEJNX0RPTlRfU0VUfEJNX0RPTlRf
VEVTVCk7CkBAIC0zNTQxLDcgKzM1NTIsNyBAQCBpbnQgZHJiZF9iaXRtYXBfaW8oc3RydWN0IGRy
YmRfZGV2aWNlICpkZXZpY2UsIGludCAoKmlvX2ZuKShzdHJ1Y3QgZHJiZF9kZXZpY2UgKgogCQlk
cmJkX3N1c3BlbmRfaW8oZGV2aWNlKTsKIAogCWRyYmRfYm1fbG9jayhkZXZpY2UsIHdoeSwgZmxh
Z3MpOwotCXJ2ID0gaW9fZm4oZGV2aWNlKTsKKwlydiA9IGlvX2ZuKGRldmljZSwgcGVlcl9kZXZp
Y2UpOwogCWRyYmRfYm1fdW5sb2NrKGRldmljZSk7CiAKIAlpZiAoZG9fc3VzcGVuZF9pbykKZGlm
ZiAtLWdpdCBhL2RyaXZlcnMvYmxvY2svZHJiZC9kcmJkX25sLmMgYi9kcml2ZXJzL2Jsb2NrL2Ry
YmQvZHJiZF9ubC5jCmluZGV4IDYwNzU3YWMzMTcwMS4uODk2NzI5ODk2OGYzIDEwMDY0NAotLS0g
YS9kcml2ZXJzL2Jsb2NrL2RyYmQvZHJiZF9ubC5jCisrKyBiL2RyaXZlcnMvYmxvY2svZHJiZC9k
cmJkX25sLmMKQEAgLTEwNTMsNyArMTA1Myw3IEBAIGRyYmRfZGV0ZXJtaW5lX2Rldl9zaXplKHN0
cnVjdCBkcmJkX2RldmljZSAqZGV2aWNlLCBlbnVtIGRkc19mbGFncyBmbGFncywgc3RydWN0CiAJ
CQkgbGFfc2l6ZV9jaGFuZ2VkID8gInNpemUgY2hhbmdlZCIgOiAibWQgbW92ZWQiKTsKIAkJLyog
bmV4dCBsaW5lIGltcGxpY2l0bHkgZG9lcyBkcmJkX3N1c3BlbmRfaW8oKStkcmJkX3Jlc3VtZV9p
bygpICovCiAJCWRyYmRfYml0bWFwX2lvKGRldmljZSwgbWRfbW92ZWQgPyAmZHJiZF9ibV93cml0
ZV9hbGwgOiAmZHJiZF9ibV93cml0ZSwKLQkJCSAgICAgICAic2l6ZSBjaGFuZ2VkIiwgQk1fTE9D
S0VEX01BU0spOworCQkJICAgICAgICJzaXplIGNoYW5nZWQiLCBCTV9MT0NLRURfTUFTSywgTlVM
TCk7CiAKIAkJLyogb24tZGlzayBiaXRtYXAgYW5kIGFjdGl2aXR5IGxvZyBpcyBhdXRob3JpdGF0
aXZlIGFnYWluCiAJCSAqICh1bmxlc3MgdGhlcmUgd2FzIGFuIElPIGVycm9yIG1lYW53aGlsZS4u
LikgKi8KQEAgLTIwMjcsMTMgKzIwMjcsMTUgQEAgaW50IGRyYmRfYWRtX2F0dGFjaChzdHJ1Y3Qg
c2tfYnVmZiAqc2tiLCBzdHJ1Y3QgZ2VubF9pbmZvICppbmZvKQogCQlkcmJkX2luZm8oZGV2aWNl
LCAiQXNzdW1pbmcgdGhhdCBhbGwgYmxvY2tzIGFyZSBvdXQgb2Ygc3luYyAiCiAJCSAgICAgIihh
a2EgRnVsbFN5bmMpXG4iKTsKIAkJaWYgKGRyYmRfYml0bWFwX2lvKGRldmljZSwgJmRyYmRfYm1p
b19zZXRfbl93cml0ZSwKLQkJCSJzZXRfbl93cml0ZSBmcm9tIGF0dGFjaGluZyIsIEJNX0xPQ0tF
RF9NQVNLKSkgeworCQkJInNldF9uX3dyaXRlIGZyb20gYXR0YWNoaW5nIiwgQk1fTE9DS0VEX01B
U0ssCisJCQlOVUxMKSkgewogCQkJcmV0Y29kZSA9IEVSUl9JT19NRF9ESVNLOwogCQkJZ290byBm
b3JjZV9kaXNrbGVzc19kZWM7CiAJCX0KIAl9IGVsc2UgewogCQlpZiAoZHJiZF9iaXRtYXBfaW8o
ZGV2aWNlLCAmZHJiZF9ibV9yZWFkLAotCQkJInJlYWQgZnJvbSBhdHRhY2hpbmciLCBCTV9MT0NL
RURfTUFTSykpIHsKKwkJCSJyZWFkIGZyb20gYXR0YWNoaW5nIiwgQk1fTE9DS0VEX01BU0ssCisJ
CQlOVUxMKSkgewogCQkJcmV0Y29kZSA9IEVSUl9JT19NRF9ESVNLOwogCQkJZ290byBmb3JjZV9k
aXNrbGVzc19kZWM7CiAJCX0KQEAgLTI5NzIsNyArMjk3NCw3IEBAIGludCBkcmJkX2FkbV9pbnZh
bGlkYXRlKHN0cnVjdCBza19idWZmICpza2IsIHN0cnVjdCBnZW5sX2luZm8gKmluZm8pCiAJCXJl
dGNvZGUgPSBkcmJkX3JlcXVlc3Rfc3RhdGUoZGV2aWNlLCBOUyhkaXNrLCBEX0lOQ09OU0lTVEVO
VCkpOwogCQlpZiAocmV0Y29kZSA+PSBTU19TVUNDRVNTKSB7CiAJCQlpZiAoZHJiZF9iaXRtYXBf
aW8oZGV2aWNlLCAmZHJiZF9ibWlvX3NldF9uX3dyaXRlLAotCQkJCSJzZXRfbl93cml0ZSBmcm9t
IGludmFsaWRhdGUiLCBCTV9MT0NLRURfTUFTSykpCisJCQkJInNldF9uX3dyaXRlIGZyb20gaW52
YWxpZGF0ZSIsIEJNX0xPQ0tFRF9NQVNLLCBOVUxMKSkKIAkJCQlyZXRjb2RlID0gRVJSX0lPX01E
X0RJU0s7CiAJCX0KIAl9IGVsc2UKQEAgLTMwMDUsMTEgKzMwMDcsMTIgQEAgc3RhdGljIGludCBk
cmJkX2FkbV9zaW1wbGVfcmVxdWVzdF9zdGF0ZShzdHJ1Y3Qgc2tfYnVmZiAqc2tiLCBzdHJ1Y3Qg
Z2VubF9pbmZvICoKIAlyZXR1cm4gMDsKIH0KIAotc3RhdGljIGludCBkcmJkX2JtaW9fc2V0X3N1
c3BfYWwoc3RydWN0IGRyYmRfZGV2aWNlICpkZXZpY2UpIF9fbXVzdF9ob2xkKGxvY2FsKQorc3Rh
dGljIGludCBkcmJkX2JtaW9fc2V0X3N1c3BfYWwoc3RydWN0IGRyYmRfZGV2aWNlICpkZXZpY2Us
CisJCXN0cnVjdCBkcmJkX3BlZXJfZGV2aWNlICpwZWVyX2RldmljZSkgX19tdXN0X2hvbGQobG9j
YWwpCiB7CiAJaW50IHJ2OwogCi0JcnYgPSBkcmJkX2JtaW9fc2V0X25fd3JpdGUoZGV2aWNlKTsK
KwlydiA9IGRyYmRfYm1pb19zZXRfbl93cml0ZShkZXZpY2UsIHBlZXJfZGV2aWNlKTsKIAlkcmJk
X3N1c3BlbmRfYWwoZGV2aWNlKTsKIAlyZXR1cm4gcnY7CiB9CkBAIC0zMDUyLDcgKzMwNTUsNyBA
QCBpbnQgZHJiZF9hZG1faW52YWxpZGF0ZV9wZWVyKHN0cnVjdCBza19idWZmICpza2IsIHN0cnVj
dCBnZW5sX2luZm8gKmluZm8pCiAJCWlmIChyZXRjb2RlID49IFNTX1NVQ0NFU1MpIHsKIAkJCWlm
IChkcmJkX2JpdG1hcF9pbyhkZXZpY2UsICZkcmJkX2JtaW9fc2V0X3N1c3BfYWwsCiAJCQkJInNl
dF9uX3dyaXRlIGZyb20gaW52YWxpZGF0ZV9wZWVyIiwKLQkJCQlCTV9MT0NLRURfU0VUX0FMTE9X
RUQpKQorCQkJCUJNX0xPQ0tFRF9TRVRfQUxMT1dFRCwgTlVMTCkpCiAJCQkJcmV0Y29kZSA9IEVS
Ul9JT19NRF9ESVNLOwogCQl9CiAJfSBlbHNlCkBAIC00MTQ4LDcgKzQxNTEsNyBAQCBpbnQgZHJi
ZF9hZG1fbmV3X2NfdXVpZChzdHJ1Y3Qgc2tfYnVmZiAqc2tiLCBzdHJ1Y3QgZ2VubF9pbmZvICpp
bmZvKQogCiAJaWYgKGFyZ3MuY2xlYXJfYm0pIHsKIAkJZXJyID0gZHJiZF9iaXRtYXBfaW8oZGV2
aWNlLCAmZHJiZF9ibWlvX2NsZWFyX25fd3JpdGUsCi0JCQkiY2xlYXJfbl93cml0ZSBmcm9tIG5l
d19jX3V1aWQiLCBCTV9MT0NLRURfTUFTSyk7CisJCQkiY2xlYXJfbl93cml0ZSBmcm9tIG5ld19j
X3V1aWQiLCBCTV9MT0NLRURfTUFTSywgTlVMTCk7CiAJCWlmIChlcnIpIHsKIAkJCWRyYmRfZXJy
KGRldmljZSwgIldyaXRpbmcgYml0bWFwIGZhaWxlZCB3aXRoICVkXG4iLCBlcnIpOwogCQkJcmV0
Y29kZSA9IEVSUl9JT19NRF9ESVNLOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ibG9jay9kcmJkL2Ry
YmRfcmVjZWl2ZXIuYyBiL2RyaXZlcnMvYmxvY2svZHJiZC9kcmJkX3JlY2VpdmVyLmMKaW5kZXgg
NzU3ZjQ2OTJiNWJkLi5lNzAwNzZmZTFmMmUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvYmxvY2svZHJi
ZC9kcmJkX3JlY2VpdmVyLmMKKysrIGIvZHJpdmVycy9ibG9jay9kcmJkL2RyYmRfcmVjZWl2ZXIu
YwpAQCAtMzU5MSw3ICszNTkxLDcgQEAgc3RhdGljIGVudW0gZHJiZF9jb25ucyBkcmJkX3N5bmNf
aGFuZHNoYWtlKHN0cnVjdCBkcmJkX3BlZXJfZGV2aWNlICpwZWVyX2RldmljZSwKIAlpZiAoYWJz
KGhnKSA+PSAyKSB7CiAJCWRyYmRfaW5mbyhkZXZpY2UsICJXcml0aW5nIHRoZSB3aG9sZSBiaXRt
YXAsIGZ1bGwgc3luYyByZXF1aXJlZCBhZnRlciBkcmJkX3N5bmNfaGFuZHNoYWtlLlxuIik7CiAJ
CWlmIChkcmJkX2JpdG1hcF9pbyhkZXZpY2UsICZkcmJkX2JtaW9fc2V0X25fd3JpdGUsICJzZXRf
bl93cml0ZSBmcm9tIHN5bmNfaGFuZHNoYWtlIiwKLQkJCQkJQk1fTE9DS0VEX1NFVF9BTExPV0VE
KSkKKwkJCQkJQk1fTE9DS0VEX1NFVF9BTExPV0VELCBOVUxMKSkKIAkJCXJldHVybiBDX01BU0s7
CiAJfQogCkBAIC00MjcwLDcgKzQyNzAsNyBAQCBzdGF0aWMgaW50IHJlY2VpdmVfdXVpZHMoc3Ry
dWN0IGRyYmRfY29ubmVjdGlvbiAqY29ubmVjdGlvbiwgc3RydWN0IHBhY2tldF9pbmZvCiAJCQlk
cmJkX2luZm8oZGV2aWNlLCAiQWNjZXB0ZWQgbmV3IGN1cnJlbnQgVVVJRCwgcHJlcGFyaW5nIHRv
IHNraXAgaW5pdGlhbCBzeW5jXG4iKTsKIAkJCWRyYmRfYml0bWFwX2lvKGRldmljZSwgJmRyYmRf
Ym1pb19jbGVhcl9uX3dyaXRlLAogCQkJCQkiY2xlYXJfbl93cml0ZSBmcm9tIHJlY2VpdmVfdXVp
ZHMiLAotCQkJCQlCTV9MT0NLRURfVEVTVF9BTExPV0VEKTsKKwkJCQkJQk1fTE9DS0VEX1RFU1Rf
QUxMT1dFRCwgTlVMTCk7CiAJCQlfZHJiZF91dWlkX3NldChkZXZpY2UsIFVJX0NVUlJFTlQsIHBf
dXVpZFtVSV9DVVJSRU5UXSk7CiAJCQlfZHJiZF91dWlkX3NldChkZXZpY2UsIFVJX0JJVE1BUCwg
MCk7CiAJCQlfZHJiZF9zZXRfc3RhdGUoX05TMihkZXZpY2UsIGRpc2ssIERfVVBfVE9fREFURSwg
cGRzaywgRF9VUF9UT19EQVRFKSwKQEAgLTQ4NzcsNyArNDg3Nyw3IEBAIHN0YXRpYyBpbnQgcmVj
ZWl2ZV9iaXRtYXAoc3RydWN0IGRyYmRfY29ubmVjdGlvbiAqY29ubmVjdGlvbiwgc3RydWN0IHBh
Y2tldF9pbmZvCiAJaWYgKGRldmljZS0+c3RhdGUuY29ubiA9PSBDX1dGX0JJVE1BUF9UKSB7CiAJ
CWVudW0gZHJiZF9zdGF0ZV9ydiBydjsKIAotCQllcnIgPSBkcmJkX3NlbmRfYml0bWFwKGRldmlj
ZSk7CisJCWVyciA9IGRyYmRfc2VuZF9iaXRtYXAoZGV2aWNlLCBwZWVyX2RldmljZSk7CiAJCWlm
IChlcnIpCiAJCQlnb3RvIG91dDsKIAkJLyogT21pdCBDU19PUkRFUkVEIHdpdGggdGhpcyBzdGF0
ZSB0cmFuc2l0aW9uIHRvIGF2b2lkIGRlYWRsb2Nrcy4gKi8KQEAgLTUyMTQsNyArNTIxNCw3IEBA
IHN0YXRpYyBpbnQgZHJiZF9kaXNjb25uZWN0ZWQoc3RydWN0IGRyYmRfcGVlcl9kZXZpY2UgKnBl
ZXJfZGV2aWNlKQogCiAJaWYgKGdldF9sZGV2KGRldmljZSkpIHsKIAkJZHJiZF9iaXRtYXBfaW8o
ZGV2aWNlLCAmZHJiZF9ibV93cml0ZV9jb3B5X3BhZ2VzLAotCQkJCSJ3cml0ZSBmcm9tIGRpc2Nv
bm5lY3RlZCIsIEJNX0xPQ0tFRF9DSEFOR0VfQUxMT1dFRCk7CisJCQkJIndyaXRlIGZyb20gZGlz
Y29ubmVjdGVkIiwgQk1fTE9DS0VEX0NIQU5HRV9BTExPV0VELCBOVUxMKTsKIAkJcHV0X2xkZXYo
ZGV2aWNlKTsKIAl9CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvYmxvY2svZHJiZC9kcmJkX3N0YXRl
LmMgYi9kcml2ZXJzL2Jsb2NrL2RyYmQvZHJiZF9zdGF0ZS5jCmluZGV4IDc1ZDEzZWEwMDI0Zi4u
YzkyZGM2MDkzYjBhIDEwMDY0NAotLS0gYS9kcml2ZXJzL2Jsb2NrL2RyYmQvZHJiZF9zdGF0ZS5j
CisrKyBiL2RyaXZlcnMvYmxvY2svZHJiZC9kcmJkX3N0YXRlLmMKQEAgLTE1MTgsOCArMTUxOCw5
IEBAIHN0YXRpYyB2b2lkIGFid19zdGFydF9zeW5jKHN0cnVjdCBkcmJkX2RldmljZSAqZGV2aWNl
LCBpbnQgcnYpCiB9CiAKIGludCBkcmJkX2JpdG1hcF9pb19mcm9tX3dvcmtlcihzdHJ1Y3QgZHJi
ZF9kZXZpY2UgKmRldmljZSwKLQkJaW50ICgqaW9fZm4pKHN0cnVjdCBkcmJkX2RldmljZSAqKSwK
LQkJY2hhciAqd2h5LCBlbnVtIGJtX2ZsYWcgZmxhZ3MpCisJCWludCAoKmlvX2ZuKShzdHJ1Y3Qg
ZHJiZF9kZXZpY2UgKiwgc3RydWN0IGRyYmRfcGVlcl9kZXZpY2UgKiksCisJCWNoYXIgKndoeSwg
ZW51bSBibV9mbGFnIGZsYWdzLAorCQlzdHJ1Y3QgZHJiZF9wZWVyX2RldmljZSAqcGVlcl9kZXZp
Y2UpCiB7CiAJaW50IHJ2OwogCkBAIC0xNTI5LDcgKzE1MzAsNyBAQCBpbnQgZHJiZF9iaXRtYXBf
aW9fZnJvbV93b3JrZXIoc3RydWN0IGRyYmRfZGV2aWNlICpkZXZpY2UsCiAJYXRvbWljX2luYygm
ZGV2aWNlLT5zdXNwZW5kX2NudCk7CiAKIAlkcmJkX2JtX2xvY2soZGV2aWNlLCB3aHksIGZsYWdz
KTsKLQlydiA9IGlvX2ZuKGRldmljZSk7CisJcnYgPSBpb19mbihkZXZpY2UsIHBlZXJfZGV2aWNl
KTsKIAlkcmJkX2JtX3VubG9jayhkZXZpY2UpOwogCiAJZHJiZF9yZXN1bWVfaW8oZGV2aWNlKTsK
QEAgLTE4MDksNyArMTgxMCw3IEBAIHN0YXRpYyB2b2lkIGFmdGVyX3N0YXRlX2NoKHN0cnVjdCBk
cmJkX2RldmljZSAqZGV2aWNlLCB1bmlvbiBkcmJkX3N0YXRlIG9zLAogCSAgICBkZXZpY2UtPnN0
YXRlLmNvbm4gPT0gQ19XRl9CSVRNQVBfUykKIAkJZHJiZF9xdWV1ZV9iaXRtYXBfaW8oZGV2aWNl
LCAmZHJiZF9zZW5kX2JpdG1hcCwgTlVMTCwKIAkJCQkic2VuZF9iaXRtYXAgKFdGQml0TWFwUyki
LAotCQkJCUJNX0xPQ0tFRF9URVNUX0FMTE9XRUQpOworCQkJCUJNX0xPQ0tFRF9URVNUX0FMTE9X
RUQsIHBlZXJfZGV2aWNlKTsKIAogCS8qIExvc3QgY29udGFjdCB0byBwZWVyJ3MgY29weSBvZiB0
aGUgZGF0YSAqLwogCWlmIChsb3N0X2NvbnRhY3RfdG9fcGVlcl9kYXRhKG9zLnBkc2ssIG5zLnBk
c2spKSB7CkBAIC0xODM5LDcgKzE4NDAsNyBAQCBzdGF0aWMgdm9pZCBhZnRlcl9zdGF0ZV9jaChz
dHJ1Y3QgZHJiZF9kZXZpY2UgKmRldmljZSwgdW5pb24gZHJiZF9zdGF0ZSBvcywKIAkJCSAqIE5v
IGhhcm0gZG9uZSBpZiB0aGUgYml0bWFwIHN0aWxsIGNoYW5nZXMsCiAJCQkgKiByZWRpcnRpZWQg
cGFnZXMgd2lsbCBmb2xsb3cgbGF0ZXIuICovCiAJCQlkcmJkX2JpdG1hcF9pb19mcm9tX3dvcmtl
cihkZXZpY2UsICZkcmJkX2JtX3dyaXRlLAotCQkJCSJkZW1vdGUgZGlza2xlc3MgcGVlciIsIEJN
X0xPQ0tFRF9TRVRfQUxMT1dFRCk7CisJCQkJImRlbW90ZSBkaXNrbGVzcyBwZWVyIiwgQk1fTE9D
S0VEX1NFVF9BTExPV0VELCBwZWVyX2RldmljZSk7CiAJCXB1dF9sZGV2KGRldmljZSk7CiAJfQog
CkBAIC0xODUxLDcgKzE4NTIsNyBAQCBzdGF0aWMgdm9pZCBhZnRlcl9zdGF0ZV9jaChzdHJ1Y3Qg
ZHJiZF9kZXZpY2UgKmRldmljZSwgdW5pb24gZHJiZF9zdGF0ZSBvcywKIAkJLyogTm8gY2hhbmdl
cyB0byB0aGUgYml0bWFwIGV4cGVjdGVkIHRoaXMgdGltZSwgc28gYXNzZXJ0IHRoYXQsCiAJCSAq
IGV2ZW4gdGhvdWdoIG5vIGhhcm0gd2FzIGRvbmUgaWYgaXQgZGlkIGNoYW5nZS4gKi8KIAkJZHJi
ZF9iaXRtYXBfaW9fZnJvbV93b3JrZXIoZGV2aWNlLCAmZHJiZF9ibV93cml0ZSwKLQkJCQkiZGVt
b3RlIiwgQk1fTE9DS0VEX1RFU1RfQUxMT1dFRCk7CisJCQkJImRlbW90ZSIsIEJNX0xPQ0tFRF9U
RVNUX0FMTE9XRUQsIHBlZXJfZGV2aWNlKTsKIAkJcHV0X2xkZXYoZGV2aWNlKTsKIAl9CiAKQEAg
LTE4ODgsNyArMTg4OSw4IEBAIHN0YXRpYyB2b2lkIGFmdGVyX3N0YXRlX2NoKHN0cnVjdCBkcmJk
X2RldmljZSAqZGV2aWNlLCB1bmlvbiBkcmJkX3N0YXRlIG9zLAogCQkvKiBubyBvdGhlciBiaXRt
YXAgY2hhbmdlcyBleHBlY3RlZCBkdXJpbmcgdGhpcyBwaGFzZSAqLwogCQlkcmJkX3F1ZXVlX2Jp
dG1hcF9pbyhkZXZpY2UsCiAJCQkmZHJiZF9ibWlvX3NldF9uX3dyaXRlLCAmYWJ3X3N0YXJ0X3N5
bmMsCi0JCQkic2V0X25fd3JpdGUgZnJvbSBTdGFydGluZ1N5bmMiLCBCTV9MT0NLRURfVEVTVF9B
TExPV0VEKTsKKwkJCSJzZXRfbl93cml0ZSBmcm9tIFN0YXJ0aW5nU3luYyIsIEJNX0xPQ0tFRF9U
RVNUX0FMTE9XRUQsCisJCQlwZWVyX2RldmljZSk7CiAKIAkvKiBmaXJzdCBoYWxmIG9mIGxvY2Fs
IElPIGVycm9yLCBmYWlsdXJlIHRvIGF0dGFjaCwKIAkgKiBvciBhZG1pbmlzdHJhdGl2ZSBkZXRh
Y2ggKi8KQEAgLTIwMTEsNyArMjAxMyw4IEBAIHN0YXRpYyB2b2lkIGFmdGVyX3N0YXRlX2NoKHN0
cnVjdCBkcmJkX2RldmljZSAqZGV2aWNlLCB1bmlvbiBkcmJkX3N0YXRlIG9zLAogCWlmICgob3Mu
Y29ubiA+IENfQ09OTkVDVEVEICYmIG9zLmNvbm4gPCBDX0FIRUFEKSAmJgogCSAgICAobnMuY29u
biA9PSBDX0NPTk5FQ1RFRCB8fCBucy5jb25uID49IENfQUhFQUQpICYmIGdldF9sZGV2KGRldmlj
ZSkpIHsKIAkJZHJiZF9xdWV1ZV9iaXRtYXBfaW8oZGV2aWNlLCAmZHJiZF9ibV93cml0ZV9jb3B5
X3BhZ2VzLCBOVUxMLAotCQkJIndyaXRlIGZyb20gcmVzeW5jX2ZpbmlzaGVkIiwgQk1fTE9DS0VE
X0NIQU5HRV9BTExPV0VEKTsKKwkJCSJ3cml0ZSBmcm9tIHJlc3luY19maW5pc2hlZCIsIEJNX0xP
Q0tFRF9DSEFOR0VfQUxMT1dFRCwKKwkJCXBlZXJfZGV2aWNlKTsKIAkJcHV0X2xkZXYoZGV2aWNl
KTsKIAl9CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvYmxvY2svZHJiZC9kcmJkX3dvcmtlci5jIGIv
ZHJpdmVycy9ibG9jay9kcmJkL2RyYmRfd29ya2VyLmMKaW5kZXggZjQ2NzM4MDQwZDZiLi42OGQ1
YmE0YWYxN2QgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvYmxvY2svZHJiZC9kcmJkX3dvcmtlci5jCisr
KyBiL2RyaXZlcnMvYmxvY2svZHJiZC9kcmJkX3dvcmtlci5jCkBAIC0xOTQ1LDYgKzE5NDUsNyBA
QCBzdGF0aWMgdm9pZCBkcmJkX2xkZXZfZGVzdHJveShzdHJ1Y3QgZHJiZF9kZXZpY2UgKmRldmlj
ZSkKIAogc3RhdGljIHZvaWQgZ29fZGlza2xlc3Moc3RydWN0IGRyYmRfZGV2aWNlICpkZXZpY2Up
CiB7CisJc3RydWN0IGRyYmRfcGVlcl9kZXZpY2UgKnBlZXJfZGV2aWNlID0gZmlyc3RfcGVlcl9k
ZXZpY2UoZGV2aWNlKTsKIAlEX0FTU0VSVChkZXZpY2UsIGRldmljZS0+c3RhdGUuZGlzayA9PSBE
X0ZBSUxFRCk7CiAJLyogd2UgY2Fubm90IGFzc2VydCBsb2NhbF9jbnQgPT0gMCBoZXJlLCBhcyBn
ZXRfbGRldl9pZl9zdGF0ZSB3aWxsCiAJICogaW5jL2RlYyBpdCBmcmVxdWVudGx5LiBPbmNlIHdl
IGFyZSBEX0RJU0tMRVNTLCBubyBvbmUgd2lsbCB0b3VjaApAQCAtMTk3MCw3ICsxOTcxLDcgQEAg
c3RhdGljIHZvaWQgZ29fZGlza2xlc3Moc3RydWN0IGRyYmRfZGV2aWNlICpkZXZpY2UpCiAJCSAq
IEFueSBtb2RpZmljYXRpb25zIHdvdWxkIG5vdCBiZSBleHBlY3RlZCBhbnltb3JlLCB0aG91Z2gu
CiAJCSAqLwogCQlpZiAoZHJiZF9iaXRtYXBfaW9fZnJvbV93b3JrZXIoZGV2aWNlLCBkcmJkX2Jt
X3dyaXRlLAotCQkJCQkiZGV0YWNoIiwgQk1fTE9DS0VEX1RFU1RfQUxMT1dFRCkpIHsKKwkJCQkJ
ImRldGFjaCIsIEJNX0xPQ0tFRF9URVNUX0FMTE9XRUQsIHBlZXJfZGV2aWNlKSkgewogCQkJaWYg
KHRlc3RfYml0KFdBU19SRUFEX0VSUk9SLCAmZGV2aWNlLT5mbGFncykpIHsKIAkJCQlkcmJkX21k
X3NldF9mbGFnKGRldmljZSwgTURGX0ZVTExfU1lOQyk7CiAJCQkJZHJiZF9tZF9zeW5jKGRldmlj
ZSk7Ci0tIAoyLjM5LjEKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fCmRyYmQtZGV2IG1haWxpbmcgbGlzdApkcmJkLWRldkBsaXN0cy5saW5iaXQuY29tCmh0
dHBzOi8vbGlzdHMubGluYml0LmNvbS9tYWlsbWFuL2xpc3RpbmZvL2RyYmQtZGV2Cg==
